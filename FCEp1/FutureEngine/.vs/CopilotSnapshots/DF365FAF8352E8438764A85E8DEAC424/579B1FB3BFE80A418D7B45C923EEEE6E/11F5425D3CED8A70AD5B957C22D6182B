#include "GameFont.h"
#include <iostream>
#include "Texture2D.h"

GameFont::GameFont(std::string path,int size)
{
    FT_Library ft;
    if (FT_Init_FreeType(&ft)) {
        std::cerr << "Could not init FreeType library" << std::endl;
        return;
    }

    FT_Face face;
    if (FT_New_Face(ft, path.c_str(), 0, &face)) {
        std::cerr << "Failed to load font: " << path << std::endl;
        return;
    }

    FT_Set_Pixel_Sizes(face, 0, size);

    for (unsigned char c = 0; c < 128; c++) { // Load first 128 ASCII characters
        if (FT_Load_Char(face, c, FT_LOAD_RENDER)) {
            std::cerr << "Failed to load glyph: " << c << std::endl;
            continue;
        }

		Texture2D* charTex = new Texture2D(face->glyph->bitmap.width, face->glyph->bitmap.rows, face->glyph->bitmap.buffer,1);

        FontChar fc = {

            charTex,
            glm::ivec2(face->glyph->bitmap.width, face->glyph->bitmap.rows),
            glm::ivec2(face->glyph->bitmap_left, face->glyph->bitmap_top),
            static_cast<int>(face->glyph->advance.x)


        };

        

        // Store character info
       
        m_Chars.insert(std::pair<char,FontChar>(c, fc));
    }


   // glBindTexture(GL_TEXTURE_2D, 0);
    FT_Done_Face(face);
    FT_Done_FreeType(ft);

}